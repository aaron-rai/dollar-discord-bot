"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[7442],{1453:(e,i,a)=>{a.r(i),a.d(i,{assets:()=>o,contentTitle:()=>t,default:()=>u,frontMatter:()=>l,metadata:()=>n,toc:()=>c});const n=JSON.parse('{"id":"Music/overview","title":"Music Commands Overview","description":"Dollar uses advanced tools to provide a seamless music experience on your server. The bot leverages Lavalink, a high-performance audio streaming server for Discord bots, to serve music. Lavalink allows Dollar to play music reliably with low latency and minimal server load, even in large servers.","source":"@site/docs/2-Music/1-overview.md","sourceDirName":"2-Music","slug":"/Music/overview","permalink":"/dollar-discord-bot/docs/Music/overview","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":1,"frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Dollar Overview","permalink":"/dollar-discord-bot/docs/overview"},"next":{"title":"!empty","permalink":"/dollar-discord-bot/docs/Music/Commands/Empty"}}');var r=a(4848),s=a(8453);const l={},t="Music Commands Overview",o={},c=[{value:"Lavalink: High-Performance Music Streaming",id:"lavalink-high-performance-music-streaming",level:2},{value:"Key Features of Lavalink:",id:"key-features-of-lavalink",level:3},{value:"Wavelink: Interfacing with Lavalink",id:"wavelink-interfacing-with-lavalink",level:2},{value:"Key Features of Wavelink:",id:"key-features-of-wavelink",level:3},{value:"Music Experience with Dollar",id:"music-experience-with-dollar",level:2}];function d(e){const i={h1:"h1",h2:"h2",h3:"h3",header:"header",hr:"hr",li:"li",p:"p",strong:"strong",ul:"ul",...(0,s.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(i.header,{children:(0,r.jsx)(i.h1,{id:"music-commands-overview",children:"Music Commands Overview"})}),"\n",(0,r.jsxs)(i.p,{children:["Dollar uses advanced tools to provide a seamless music experience on your server. The bot leverages ",(0,r.jsx)(i.strong,{children:"Lavalink"}),", a high-performance audio streaming server for Discord bots, to serve music. Lavalink allows Dollar to play music reliably with low latency and minimal server load, even in large servers."]}),"\n",(0,r.jsxs)(i.p,{children:["To interact with Lavalink, Dollar uses ",(0,r.jsx)(i.strong,{children:"Wavelink"}),", a Python wrapper around Lavalink that provides a simple and easy-to-use interface for controlling music playback."]}),"\n",(0,r.jsx)(i.h2,{id:"lavalink-high-performance-music-streaming",children:"Lavalink: High-Performance Music Streaming"}),"\n",(0,r.jsx)(i.p,{children:"Lavalink is an audio streaming server designed specifically for Discord bots. It offloads the heavy lifting of audio playback from the bot to a separate server, ensuring smooth playback and less strain on your bot\u2019s resources. By using Lavalink, Dollar can handle music in a way that scales well with high server usage and multiple concurrent users."}),"\n",(0,r.jsx)(i.h3,{id:"key-features-of-lavalink",children:"Key Features of Lavalink:"}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Low latency streaming"}),": Lavalink streams music to Discord with minimal delay, ensuring a responsive listening experience."]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"High-quality audio"}),": It supports high-quality audio, including 320kbps streaming."]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Scalable"}),": Lavalink is designed to handle large amounts of concurrent audio sessions, making it ideal for large Discord servers."]}),"\n"]}),"\n",(0,r.jsx)(i.h2,{id:"wavelink-interfacing-with-lavalink",children:"Wavelink: Interfacing with Lavalink"}),"\n",(0,r.jsxs)(i.p,{children:[(0,r.jsx)(i.strong,{children:"Wavelink"})," is a Python wrapper that simplifies interaction with Lavalink. It abstracts away the complexity of Lavalink's raw WebSocket API and provides a more Pythonic interface for controlling music playback. Wavelink is integral to how Dollar communicates with Lavalink, handling everything from song queue management to track retrieval."]}),"\n",(0,r.jsx)(i.h3,{id:"key-features-of-wavelink",children:"Key Features of Wavelink:"}),"\n",(0,r.jsxs)(i.ul,{children:["\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Track management"}),": Easily add, remove, and reorder tracks in the queue."]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Playback control"}),": Simple methods to play, pause, skip, and resume music."]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Player state management"}),": Retrieve and manage the state of the music player (e.g., current track, volume, etc.)."]}),"\n",(0,r.jsxs)(i.li,{children:[(0,r.jsx)(i.strong,{children:"Integration with Lavalink"}),": Wavelink takes care of managing connections to Lavalink, making the bot\u2019s music control effortless."]}),"\n"]}),"\n",(0,r.jsx)(i.h2,{id:"music-experience-with-dollar",children:"Music Experience with Dollar"}),"\n",(0,r.jsx)(i.p,{children:"With Lavalink serving the music and Wavelink controlling the playback, Dollar offers a smooth and responsive music experience on your Discord server. Users can play songs, create playlists, shuffle the queue, and get real-time information like current track, next song, and lyrics\u2014all through intuitive commands."}),"\n",(0,r.jsx)(i.hr,{}),"\n",(0,r.jsx)(i.p,{children:"By using Lavalink for audio streaming and Wavelink for interacting with Lavalink, Dollar ensures high-quality, low-latency music playback for all users. This setup allows Dollar to efficiently handle music playback and scale across large servers with minimal resource usage."})]})}function u(e={}){const{wrapper:i}={...(0,s.R)(),...e.components};return i?(0,r.jsx)(i,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}},8453:(e,i,a)=>{a.d(i,{R:()=>l,x:()=>t});var n=a(6540);const r={},s=n.createContext(r);function l(e){const i=n.useContext(s);return n.useMemo((function(){return"function"==typeof e?e(i):{...i,...e}}),[i,e])}function t(e){let i;return i=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:l(e.components),n.createElement(s.Provider,{value:i},e.children)}}}]);